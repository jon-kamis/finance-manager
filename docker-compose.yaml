services:

  financemanager:
    build: ./financemanager-backend
    ports:
      - '8080:8080'
    networks:
      - fm_net
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_ENV}
      SPRING_DATASOURCE_URL: ${POSTGRES_URL}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
        restart: true

  financemanager-frontend:
    build: ./financemanager-frontend
    networks:
      - fm_net
    ports:
      - '3000:3000'

  postgres:
    image: 'postgres:latest'
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - fm_net
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -U postgres']
      interval: 5s
      timeout: 50s
      retries: 10
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5432:5432'
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./financemanager-backend/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/1_schema.sql
      - ./financemanager-backend/src/main/resources/populate_data.sql:/docker-entrypoint-initdb.d/2_populate_data.sql
      - ./financemanager-backend/src/main/resources/standard_deductions_24.csv:/docker-entrypoint-initdb.d/standard_deductions.csv

networks:
  fm_net:
    driver: bridge